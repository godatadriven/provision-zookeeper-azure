{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "BigDataVNet",
      "metadata": {
        "description": "VNet name"
      }
    },
    "zookeeperNodeNumber": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of Zookeeper nodes to provision"
      }
    },
    "zookeeperVmPrefix": {
      "type": "string",
      "defaultValue": "zookeeper",
      "metadata": {
        "description": "Zookeeper VM prefix"
      }
    },
    "zookeeperVmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of the Zookeeper VM"
      }
    },
    "zookeeperAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Zookeeper admin username"
      }
    },
    "zookeeperSshKeyData": {
      "type": "string",
      "metadata": {
        "description": "Zookeeper SSH rsa public key file as a string."
      }
    },
    "nifiNodeNumber": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of Zookeeper nodes to provision"
      }
    },
    "nifiVmPrefix": {
      "type": "string",
      "defaultValue": "nifi",
      "metadata": {
        "description": "Nifi VM prefix"
      }
    },
    "nifiVmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of the Nifi VM"
      }
    },
    "nifiAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "NiFi admin username"
      }
    },
    "nifiSshKeyData": {
      "type": "string",
      "metadata": {
        "description": "NiFi SSH rsa public key file as a string"
      }
    }
  },
  "variables": {
    "githubLink": "https://raw.githubusercontent.com/godatadriven/provision-zookeeper-azure/master/",
    "storageAccountName": "bigdatanificluster",
    "nifiNSGName": "nifiNSG",
    "vnetAddressPrefix": "10.0.0.0/16",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "gatewaySubnet": "gateway",
    "gatewaySubnetPrefix": "10.0.0.0/29",
    "zookeeperSubnetName": "zookeeper",
    "zookeeperSubnetPrefix": "10.0.1.0/24",
    "zookeeperSubnetRef": "[concat(variables('vnetID'),'/subnets/', variables('zookeeperSubnetName'))]",
    "nifiSubnetName": "nifi",
    "nifiSubnetPrefix": "10.0.2.0/24",
    "nifiSubnetRef": "[concat(variables('vnetID'),'/subnets/', variables('nifiSubnetName'))]",
    "clusterSubnetName": "cluster",
    "clusterSubnetPrefix": "10.0.3.0/24",
    "availabilitySetNameZK": "zookeeperAvSet",
    "availabilitySetNameNiFi": "nifiAvSet",
    "zookeeperNicName": "zkNic",
    "publicIPAddressType": "Dynamic",
    "osImagePublisher": "OpenLogic",
    "osImageOffer": "CentOS",
    "osVersion": "7.3",
    "nifiNicName": "nifiNic",
    "zookeeperVmExtensionName": "zookeeperExtension",
    "zookeeperCustomScriptFilePath": "[concat(variables('githubLink'), '/zookeeper.sh')]",
    "zookeeperCustomScriptCommandToExecute": "sh zookeeper.sh",
    "nifiVmExtensionName": "nifiExtension",
    "nifiCustomScriptFilePath": "[concat(variables('githubLink'), '/nifi.sh')]",
    "nifiCustomScriptCommandToExecute": "sh nifi.sh",
    "zookeeperSshKeyPath": "[concat('/home/',parameters('zookeeperAdminUsername'),'/.ssh/authorized_keys')]",
    "nifiSshKeyPath": "[concat('/home/',parameters('nifiAdminUsername'),'/.ssh/authorized_keys')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nifiNSGName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG - NiFi"
      },
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allows SSH traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "NiFi",
            "properties": {
              "description": "Allow NiFi",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nifiNSGName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('gatewaySubnet')]",
            "properties": {
              "addressPrefix": "[variables('gatewaySubnetPrefix')]"
            }
          },
          {
            "name": "[variables('zookeeperSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('zookeeperSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('nifiSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('nifiSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('clusterSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('clusterSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetNameZK')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetNameNiFi')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('zookeeperPublicIP', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "zookeeperPublicIp",
        "count": "[parameters('zookeeperNodeNumber')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('zookeeperNicName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "zk",
        "count": "[parameters('zookeeperNodeNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.1.', copyIndex(4))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('zookeeperPublicIP', copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('zookeeperSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('zookeeperVmPrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "zk",
        "count": "[parameters('zookeeperNodeNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('zookeeperNicName'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetNameZK'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetNameZK'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('zookeeperVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('zookeeperVmPrefix'), copyIndex())]",
          "adminUsername": "[parameters('zookeeperAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('zookeeperSshKeyPath')]",
                  "keyData": "[parameters('zookeeperSshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, 'vhds/', 'osdisk_zk', copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('zookeeperNicName'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('zookeeperVmPrefix'), copyIndex(),'/', variables('zookeeperVmExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "zk",
        "count": "[parameters('zookeeperNodeNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('zookeeperVmPrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('zookeeperCustomScriptFilePath')]"
          ],
          "commandToExecute": "[concat(variables('zookeeperCustomScriptCommandToExecute'), ' ', copyIndex(), ' ', parameters('zookeeperNodeNumber'))]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('nifiPublicIP', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nifiPublicIp",
        "count": "[parameters('nifiNodeNumber')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nifiNicName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nifi",
        "count": "[parameters('nifiNodeNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.2.', copyIndex(4))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('nifiPublicIP', copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('nifiSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('nifiVmPrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "zk",
        "count": "[parameters('nifiNodeNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nifiNicName'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetNameNifi'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetNameNifi'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('nifiVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('nifiVmPrefix'), copyIndex())]",
          "adminUsername": "[parameters('nifiAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('nifiSshKeyPath')]",
                  "keyData": "[parameters('nifiSshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, 'vhds/', 'osdisk-nifi', copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk0",
              "diskSizeGB": "50",
              "lun": 0,
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, 'nifivhds/', parameters('nifiVmPrefix'), copyIndex(), '-nifidisk.vhd')]"
              },
              "createOption": "Empty"
            }
            ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nifiNicName'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('nifiVmPrefix'), copyIndex(),'/', variables('nifiVmExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "zk",
        "count": "[parameters('nifiNodeNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('nifiVmPrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('nifiCustomScriptFilePath')]"
          ],
          "commandToExecute": "[concat(variables('nifiCustomScriptCommandToExecute'), ' ', copyIndex(), ' ', parameters('nifiNodeNumber'))]"
        }
      }
    }
  ]
}